// app/api/test-discord/route.ts
import { NextResponse } from 'next/server';

export async function POST() {
  const webhookUrl = 'https://discord.com/api/webhooks/1400046836131299348/j2g_XnSCSQotXrbQsngY4pKFIFL5wMjetjqCShnugMYijMzcts3imUuo-QwAKPkyd3iD';
  
  console.log('‡∏ó‡∏î‡∏™‡∏≠‡∏ö Discord webhook...');
  console.log('Webhook URL:', webhookUrl ? '‡∏û‡∏ö' : '‡πÑ‡∏°‡πà‡∏û‡∏ö');

  if (!webhookUrl) {
    return NextResponse.json({ error: '‡πÑ‡∏°‡πà‡∏û‡∏ö Discord webhook URL' }, { status: 400 });
  }

  try {
    const payload = {
      content: 'üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Discord webhook',
      embeds: [{
        title: '‚úÖ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
        description: 'Discord webhook ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥',
        color: 0x00ff00,
        timestamp: new Date().toISOString(),
        footer: {
          text: 'Check-in App Test'
        }
      }]
    };

    console.log('‡∏™‡πà‡∏á test payload:', JSON.stringify(payload, null, 2));

    const response = await fetch(webhookUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(payload),
    });

    console.log('Test response status:', response.status);

    if (response.ok) {
      return NextResponse.json({ message: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö Discord webhook ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' });
    } else {
      const errorText = await response.text();
      console.error('Test failed:', response.status, errorText);
      return NextResponse.json({ error: `‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${response.status} - ${errorText}` }, { status: 500 });
    }
  } catch (error) {
    console.error('Test error:', error);
    return NextResponse.json({ error: `‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error}` }, { status: 500 });
  }
} 